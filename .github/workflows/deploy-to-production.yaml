name: CI Tests

on: [pull_request]

env:
  hugo_image_cache_name: hugo-generated-images
  hugo_image_cache_path: /home/runner/work/docs-publishing/docs-publishing/docs-repo/resources/_gen/images/

jobs:
  publish-site:
    runs-on: ubuntu-latest

    environment:
      name: deploy_to_production

    steps:
    - name: Set up Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.115.4'

    - name: Checkout docs repo
      uses: actions/checkout@v3
      with:
        path: 'docs-repo'

    - name: Get linode-docs-theme version
      id: get-theme-version
      working-directory: ./docs-repo
      run: |
        LINODE_DOCS_THEME_VERSION=$(hugo mod graph | grep linode-docs-theme | cut -d '+' -f 1 | grep -o '[^-]*$')
        echo "VERSION=$LINODE_DOCS_THEME_VERSION" >> $GITHUB_OUTPUT

    - name: Lookup linode-docs-theme commit full-length sha
      uses: actions/github-script@v6
      id: lookup-theme-sha
      env:
        SHORT_SHA: "${{ steps.get-theme-version.outputs.VERSION }}"
      with:
        github-token: ${{ secrets.GH_ACCOUNT_PAT_FOR_THEME_REPO }}
        result-encoding: string
        script: |
          const { SHORT_SHA } = process.env
          const response = await github.rest.repos.getCommit({
            owner: context.repo.owner,
            repo: 'linode-docs-theme',
            ref: `${SHORT_SHA}`
          })
          return response.data.sha

    - name: Print long sha
      run: echo "${{steps.lookup-theme-sha.outputs.result}}"

    - name: Checkout docs theme repo
      uses: actions/checkout@v3
      with:
        path: 'linode-docs-theme-repo'
        repository: 'nmelehan/linode-docs-theme'
        ref: "${{ steps.lookup-theme-sha.outputs.result }}"
        ssh-key: "${{ secrets.LINODE_DOCS_THEME_REPO_DEPLOY_KEY }}"

    - name: Print Linode Algolia admin tool version
      working-directory: ./linode-docs-theme-repo
      run: |
        cd scripts/linode_algolia_admin/
        go run main.go version

    - name: List contents of images dir
      continue-on-error: true
      run: ls -al ${{ env.hugo_image_cache_path }}

    - name: Restore Hugo generated images cache
      uses: ylemkimon/cache-restore@v2
      with:
        path: ${{ env.hugo_image_cache_path }}
        key: ${{ env.hugo_image_cache_name }}
        restore-keys: ${{ env.hugo_image_cache_name }}

    - name: List contents of images dir
      continue-on-error: true
      run: ls -al ${{ env.hugo_image_cache_path }}

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14

    - name: Install dependencies (Node)
      working-directory: ./docs-repo
      run: npm ci
    - name: Build Hugo
      env:
        HUGOxPARAMSxSEARCH_CONFIG2xAPP_ID: ${{ vars.ALGOLIA_APP_ID }}
        HUGOxPARAMSxSEARCH_CONFIG2xAPI_KEY: ${{ vars.ALGOLIA_SEARCH_KEY }}
      working-directory: ./docs-repo
      run: |
        hugo config

        # TODO: set env variables:
        # baseURL
        # ... look up in deploy.sh

        hugo
    - name: List rendered files
      working-directory: ./docs-repo
      run: |
        sudo apt install -y tree
        tree -L 1 public

    - name: Update Algolia
      working-directory: ./linode-docs-theme-repo
      env:
        ALGOLIA_APP_ID: ${{ vars.ALGOLIA_APP_ID }}
        ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_WRITE_KEY }}
      run: |
        cd scripts/linode_algolia_admin/

        # Hugo renders the site to the `public` directory within the docs repo.
        # This includes three files with Algolia index data:
        # - public/index.json
        # - public/api/index.json
        # - public/data/sections/index.json
        # The pushdocs command uploads this data to Algolia
        go run main.go pushdocs -source-dir ../../../docs-repo/public

        # The settings (e.g. ranking configuration) and synonyms for the
        # linode-merged index are stored in version control, and the
        # following command pushes those settings/synonyms to the Algolia app
        go run main.go -indices linode-merged push -replace settings,synonyms

        # The refresh-merge-and-push sequence assumes that the linode-wp and linode-community indices already exist in the Algolia app
        go run main.go sequence refresh-merge-and-push
